generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  contact   String @unique
  password  String
  firstName String
  lastName  String
  pdp       String?  // Photo de profil
  pdc       String?  // Photo de couverture
  purchase  String?  // À préciser si c'est un champ relationnel ou autre
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // Ajout de la date de mise à jour

  // Relation avec WorkRelation (Entreprise ↔ Worker)
  entreprises WorkRelation[] @relation("WorkRelation")
  workers     WorkRelation[] @relation("WorkRelation")

  // Relation avec CustomerRelation (Owner ↔ Customer)
  owners     CustomerRelation[] @relation("CustomerRelation")
  customers  CustomerRelation[] @relation("CustomerRelation")
}

model WorkRelation {
  id           Int   @id @default(autoincrement())

  workerId     Int
  worker       User @relation("WorkRelation", fields: [workerId], references: [id])

  entrepriseId Int
  entreprise   User @relation("WorkRelation", fields: [entrepriseId], references: [id])

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([workerId, entrepriseId]) // Évite les doublons
}

model CustomerRelation {
  id         Int   @id @default(autoincrement())

  customerId Int
  customer   User @relation("CustomerRelation", fields: [customerId], references: [id])

  ownerId    Int
  owner      User @relation("CustomerRelation", fields: [ownerId], references: [id])

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([customerId, ownerId]) // Évite les doublons
}
